#required.item.itemName=상품 이름은 필수입니다.
#range.item.price=가격은 {0} ~ {1} 까지 허용합니다.
#max.item.quantity=수량은 최대 {0} 까지 허용합니다.
#totalPriceMin=가격 * 수량의 합은 {0}원 이상이어야 합니다. 현재 값 = {1}

#==ObjectError(Global Error Message)==
#Level1
totalPriceMin.item=상품의 가격 * 수량의 합은 {0}원 이상이어야 합니다. 현재 값 = {1}

#Level2 - 생략
totalPriceMin=전체 가격은 {0}원 이상이어야 합니다. 현재 값 = {1}


#==FieldError(Error Message)==
#Level1(세밀하게 작성)
required.item.itemName=상품 이름은 필수입니다.
range.item.price=가격은 {0} ~ {1} 까지 허용합니다.
max.item.quantity=수량은 최대 {0} 까지 허용합니다.

#Level2 - 생략

#Level3(타입, 문자만 입력가능합니다, 숫자만 입력가능합니다. <- 이럴때 사용 )
required.java.lang.String = 필수 문자입니다.
required.java.lang.Integer = 필수 숫자입니다.
min.java.lang.String = {0} 이상의 문자를 입력해주세요.
min.java.lang.Integer = {0} 이상의 숫자를 입력해주세요.
range.java.lang.String = {0} ~ {1} 까지의 문자를 입력해주세요.
range.java.lang.Integer = {0} ~ {1} 까지의 숫자를 입력해주세요.
max.java.lang.String = {0} 까지의 숫자를 허용합니다.
max.java.lang.Integer = {0} 까지의 숫자를 허용합니다.

#Level4(범용성 있음, 단 세밀하지 않음.)
required = 필수 값 입니다.
min= {0} 이상이어야 합니다.
range= {0} ~ {1} 범위를 허용합니다.
max= {0} 까지 허용합니다.

#추가(바인딩(입력)에 실패하면 Bean Validation(빈 유효성검사가)이 실행이 안되며, TypeMismatch가 출력된다.  사용자가 보기 어려운 에러를 보여주기때문에 아래처럼 메시지를 수정해줘야한다.)
typeMismatch.java.lang.Integer=숫자를 입력해주세요.
typeMismatch=타입 오류입니다.

#Bean Validation 추가

#(아래 코드들 설명)  Bean Validation 추가(스프링이 제공하는 검증 애너테이션을 사용할경우 메시지가 정해져있는데, 이렇게 수정도 가능하다.)
#NotBlank.item.itemName,NotBlank.itemName,NotBlank.java.lang.String,NotBlank
#NotBlank={0} 공백X
#위에 보다 우선순위가 더 높음
NotBlank.item.itemName=상품 이름을 적어주세요.

#NotNull.item.price,NotNull.price,NotNull.java.lang.Integer,NotNull
NotNull= 입력해주세요.

Range={0}, {2} ~ {1} 허용
Max={0}, 최대 {1}
